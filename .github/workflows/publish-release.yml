name: Publish new release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version tag. fx 1.2.3"
        required: true

jobs:
  process-input:
    runs-on: ubuntu-latest
    outputs:
      validated_version: ${{ steps.validate.outputs.validated_version }}
      release_tag: ${{ steps.tag.outputs.release_tag }}
    steps:
      - name: Validate input
        id: validate
        run: |
          VERSION="${{ github.event.inputs.version }}"
          echo "Input: '$VERSION'"
          
          if [[ ! $VERSION =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Error: Version must be in the format x.y.z (e.g., 1.2.3)"
            exit 1
          fi
          
          echo "validated_version=$VERSION" >> $GITHUB_OUTPUT
          echo "Version is valid âœ…"
      - name: Prepare release tag
        id: tag
        run: |
          VALIDATED_VERSION="${{ steps.validate.outputs.validated_version }}"
          RELEASE_TAG="v$VALIDATED_VERSION"

          echo "release_tag=$RELEASE_TAG" >> $GITHUB_OUTPUT
          echo "Prepared release tag: $RELEASE_TAG"

  setup-and-build:
    runs-on: ubuntu-latest
    needs: process-input
    outputs:
      apk_path: ${{ steps.rename.outputs.apk_path }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Apply version to pubspec.yaml (build only)
        run: |
          sed -i "s/^[[:space:]]*version:.*/version: ${{ needs.process-input.outputs.validated_version }}/" pubspec.yaml
          grep "^version:" pubspec.yaml
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: '3.32.8'
      - name: Get dependencies
        run: flutter pub get
      - name: Build APK
        run: flutter build apk --release
      - name: Rename APK
        id: rename
        run: |
          VERSION="${{ needs.process-input.outputs.validated_version }}"
          NEW_PATH="build/app/outputs/flutter-apk/expense_tracker_${VERSION}.apk"
          mv build/app/outputs/flutter-apk/app-release.apk "$NEW_PATH"
          echo "apk_path=$NEW_PATH" >> $GITHUB_OUTPUT
      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: ${{ steps.rename.outputs.apk_path }}

  commit-version:
    runs-on: ubuntu-latest
    needs: [ process-input, setup-and-build ]
    steps:
      - name: Checkout master branch
        uses: actions/checkout@v4
        with:
          ref: master
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Apply version to pubspec.yaml (master branch)
        run: |
          sed -i "s/^[[:space:]]*version:.*/version: ${{ needs.process-input.outputs.validated_version }}/" pubspec.yaml
          grep "^version:" pubspec.yaml
      - name: Commit and push changes
        run: |
          VERSION="${{ needs.process-input.outputs.validated_version }}"
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add pubspec.yaml
          git commit -m "Bump version to $VERSION"
          git push origin master
          echo "commit_sha=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

  create-release:
    runs-on: ubuntu-latest
    permissions: write-all
    needs: [process-input, commit-version]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download APK artifact
        uses: actions/download-artifact@v5
        with:
          name: release-apk
          path: ./release-apk

      - name: Create Git tag
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `refs/tags/${{ needs.process-input.outputs.release_tag }}`,
              sha: `${{ needs.commit-version.outputs.commit_sha }}`            
            })

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.process-input.outputs.release_tag }}
          name: ${{ needs.process-input.outputs.release_tag }}
          files: ./release-apk/*.apk

