name: Publish new release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version tag. fx 1.2.3"
        required: true

jobs:
  process-input:
    runs-on: ubuntu-latest
    outputs:
      validated_version: ${{ steps.validate.outputs.validated_version }}
      release_tag: ${{ steps.tag.outputs.release_tag }}
    steps:
      - name: Validate input
        id: validate
        run: |
          VERSION="${{ github.event.inputs.version }}"
          echo "Input: '$VERSION'"
          
          if [[ ! $VERSION =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Error: Version must be in the format x.y.z (e.g., 1.2.3)"
            exit 1
          fi
          
          echo "validated_version=$VERSION" >> $GITHUB_OUTPUT
          echo "Version is valid âœ…"
      - name: Prepare release tag
        id: tag
        run: |
          VALIDATED_VERSION="${{ steps.validate.outputs.validated_version }}"
          RELEASE_TAG="v$VALIDATED_VERSION"

          echo "release_tag=$RELEASE_TAG" >> $GITHUB_OUTPUT
          echo "Prepared release tag: $RELEASE_TAG"

  setup-and-build:
    runs-on: ubuntu-latest
    needs: process-input
    outputs:
      apk_artifact_name: flutter-apk
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Apply version to pubspec.yaml
        run: |
          VERSION="${{ needs.process-input.outputs.validated_version }}"
          echo "Applying version $VERSION to pubspec.yaml"
          
          sed -i "s/^[[:space:]]*version:.*/version: $VERSION/" pubspec.yaml
          
          echo "Checking new replace version"
          grep "^version:" pubspec.yaml

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: '3.32.8'

      - name: Get dependencies
        run: flutter pub get

      - name: Build APK
        run: flutter build apk --release

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: build/app/outputs/flutter-apk/app-release.apk

  create-release:
    runs-on: ubuntu-latest
    needs: [process-input, setup-and-build]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download APK artifact
        uses: actions/download-artifact@v5
        with:
          name: release-apk
          path: ./release-apk

      - name: Create Git tag
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/${{ needs.process-input.outputs.release_tag }},
              sha: context.sha            
            })

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.process-input.outputs.release_tag }}
          name: Release ${{ needs.process-input.outputs.release_tag }}
          files: ./release-apk/app-release.apk



